"""
Django settings for passwordmanager project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path

import environ
from dotenv import load_dotenv

load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

env = environ.Env(
    DATABASE_URL=(str, "sqlite:///" + str(BASE_DIR / "db.sqlite3")),
    DEBUG=(bool, True),
    SECRET_KEY=(str, "not-a-real-secret-key-321"),
    STATIC_ROOT=(str, BASE_DIR / "staticfiles"),
    STATIC_URL=(str, "/static/api/"),
    SMS_ACCOUNT_SID=(str,),
    SMS_AUTH_TOKEN=(str, ""),
    SMS_FROM_NUMBER=(str, ""),
)
environ.Env.read_env(str(BASE_DIR / ".env"))
DEBUG = env("DEBUG")

ALLOWED_HOSTS = []

SECRET_KEY = env("SECRET_KEY")
# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "drf_spectacular",
    "rest_framework",
    "vault",
    "accounts.apps.AccountsConfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "passwordmanager.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            BASE_DIR / "accounts/registration/templates",
            BASE_DIR / "frontend",
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "passwordmanager.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": env.db(),
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

APPEND_SLASH = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

REST_FRAMEWORK = {
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",
        "rest_framework.renderers.BrowsableAPIRenderer",
    ],
    "DEFAULT_AUTHENTICATION_CLASSES": [
        # "vault.authentication.OIDCTokenAuthentication",
        "rest_framework.authentication.SessionAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
}

# OIDC/Auth config
# AUTH_CLIENT_ID = env("AUTH_CLIENT_ID", default="")
# AUTH_CLIENT_SECRET = env("AUTH_CLIENT_SECRET", default="")
# OIDC_ISSUER = env("OIDC_ISSUER")
# OIDC_AUDIENCE = env("OIDC_AUDIENCE")

# Cache configuration (for OIDC config and JWKS caching)
CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
        "LOCATION": "oidc-cache",
    }
}

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
        },
    },
    "loggers": {
        "vault.authentication": {
            "handlers": ["console"],
            "level": "INFO",
            "propagate": True,
        },
    },
}

# LOGIN_REDIRECT_URL = "/vault/"
STATIC_URL = "/static/"
STATICFILES_DIRS = [BASE_DIR / "frontend/static/build"]
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
FRONTEND_MANIFEST_PATH = os.path.join(
    BASE_DIR / "frontend/static/build",
    "manifest.json",
)

# from example django settings
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
        "OPTIONS": {
            "min_length": 9,
        },
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Session security settings copied from django examples
SESSION_COOKIE_SECURE = True  # HTTPS only
SESSION_COOKIE_HTTPONLY = True  # No JavaScript access
SESSION_COOKIE_SAMESITE = "Strict"  # CSRF protection
SESSION_COOKIE_AGE = 1800
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

CSRF_COOKIE_SECURE = True
CSRF_COOKIE_HTTPONLY = True
CSRF_COOKIE_SAMESITE = "Strict"


SPECTACULAR_SETTINGS = {
    "TITLE": "Secure Password Manager API",
    "DESCRIPTION": "A secure password manager API with session authentication.",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": False,
}

### email and SMTP settings
FRONTEND_URL = env("FRONTEND_URL", default="http://localhost:8000")
DEFAULT_FROM_EMAIL = env("DEFAULT_FROM_EMAIL", default="test@mailinator.com")
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
# EMAIL_HOST = "smtp.mailgun.org"
EMAIL_HOST = env("SMTP_HOST")
EMAIL_PORT = env("SMTP_PORT", default=587)
EMAIL_USE_TLS = env("SMTP_USE_TLS", default=True)
EMAIL_HOST_USER = env("SMTP_LOGIN")
EMAIL_HOST_PASSWORD = env("SMTP_PASSWORD")


## Skipping SMS config since we don't have Twilio authorized yet
# SMS_ACCOUNT_SID = env("SMS_ACCOUNT_SID")
# SMS_AUTH_TOKEN = env("SMS_AUTH_TOKEN")
# SMS_FROM_NUMBER = env("SMS_FROM_NUMBER", default="+18333513213")
